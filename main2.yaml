- name: Setup Java Boilerplate Application
  hosts: all
  become: yes
  become_flags: '-H'
  tasks:
    - name: Update and upgrade apt packages
      apt:
        update_cache: yes
        upgrade: yes

    - name: Install essential packages
      apt:
        name: "{{ item }}"
        state: present
      loop:
        - git
        - openjdk-17-jdk
        - maven
        - postgresql
        - postgresql-contrib
        - rabbitmq-server
        - nginx

    - name: Create hng user with sudo privileges
      user:
        name: hng
        groups: sudo
        append: yes
        create_home: yes
        home: /home/hng
        shell: /bin/bash

    - name: Grant hng user sudo without password
      lineinfile:
        path: /etc/sudoers
        state: present
        regexp: '^hng'
        line: 'hng ALL=(ALL) NOPASSWD:ALL'
        validate: 'visudo -cf %s'

    - name: Create the /opt/stage_5b directory
      file:
        path: /opt/stage_5b
        state: directory
        owner: hng
        group: hng
        mode: '0755'

    - name: Add /opt/stage_5b to Git safe directories for hng
      become: false
      become_user: hng
      command: git config --global --add safe.directory /opt/stage_5b

    - name: Ensure the correct ownership of the directory before git operations
      file:
        path: /opt/stage_5b
        owner: hng
        group: hng
        recurse: yes

    - name: Clean repository if exists
      become: true
      command: sudo -u hng git reset --hard HEAD
      args:
        chdir: /opt/stage_5b
      ignore_errors: yes

    - name: Fetch latest changes from remote
      become: true
      command: sudo -u hng git fetch https://github.com/hngprojects/hng_boilerplate_java_web
      args:
        chdir: /opt/stage_5b

    - name: Resolve Maven dependencies
      shell: mvn dependency:resolve
      args:
        chdir: /opt/stage_5b

    - name: Ensure PostgreSQL service is running
      service:
        name: postgresql
        state: started
        enabled: yes

    - name: Create /var/secrets directory
      file:
        path: /var/secrets
        state: directory
        owner: postgres
        group: postgres
        mode: '0700'

    - name: Save PostgreSQL credentials to /var/secrets/pg_pw.txt
      copy:
        content: |
          POSTGRES_USER=admin
          POSTGRES_PASSWORD=yourpassword
        dest: /var/secrets/pg_pw.txt
        owner: postgres
        group: postgres
        mode: '0600'

    - name: Set up PostgreSQL database
      shell: |
        sudo -u postgres psql -c "CREATE DATABASE hng_db;"
        sudo -u postgres psql -c "CREATE USER admin WITH ENCRYPTED PASSWORD 'yourpassword';"
        sudo -u postgres psql -c "GRANT ALL PRIVILEGES ON DATABASE hng_db TO admin;"
      become: no

    - name: Configure Nginx as a reverse proxy
      template:
        src: nginx.conf.j2
        dest: /etc/nginx/sites-available/stage_5b
      notify:
        - Restart Nginx

    - name: Enable Nginx site
      file:
        src: /etc/nginx/sites-available/stage_5b
        dest: /etc/nginx/sites-enabled/stage_5b
        state: link
        force: yes
      notify:
        - Restart Nginx

    - name: Ensure /var/log/stage_5b exists
      file:
        path: /var/log/stage_5b
        state: directory
        owner: hng
        group: hng

    - name: Remove the target directory if it exists
      file:
        path: /opt/stage_5b/target
        state: absent

    - name: Ensure Java JDK is installed
      apt:
        name: openjdk-17-jdk
        state: present

    - name: Set JAVA_HOME environment variable for current session
      lineinfile:
        path: /home/hng/.bashrc
        line: "export JAVA_HOME=/usr/lib/jvm/java-17-openjdk-amd64"
        create: yes
        state: present

    - name: Add JAVA_HOME to PATH in .bashrc
      lineinfile:
        path: /home/hng/.bashrc
        line: "export PATH=$JAVA_HOME/bin:$PATH"
        create: yes
        state: present

    - name: Build the application using Maven
      shell: |
        export JAVA_HOME=/usr/lib/jvm/java-17-openjdk-amd64
        export PATH=$JAVA_HOME/bin:$PATH
        mvn clean install -X
      args:
        chdir: /opt/stage_5b

    - name: Run the application
      shell: |
        cd /opt/stage_5b
        nohup java -jar target/your-app.jar > /var/log/stage_5b/out.log 2> /var/log/stage_5b/error.log &
      become_user: hng

    - name: Ensure logs are owned by hng
      file:
        path: /var/log/stage_5b
        recurse: yes
        owner: hng
        group: hng

    - name: Run application tests using Maven
      shell: |
        cd /opt/stage_5b
        ./mvnw test
      become_user: hng

  handlers:
    - name: Restart Nginx
      service:
        name: nginx
        state: restarted

